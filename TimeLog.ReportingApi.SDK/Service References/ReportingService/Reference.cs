//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeLog.ReportingApi.SDK.ReportingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", ConfigurationName="ReportingService.ServiceSoap")]
    public interface ServiceSoap {
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetWorkUnitsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse GetWorkUnitsRaw(TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetWorkUnitsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse> GetWorkUnitsRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetAllocationsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetAllocationsRaw(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetAllocationsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetAllocationsRawAsync(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetEmployeesShortList(string siteCode, string apiID, string apiPassword, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesShortListAsync(string siteCode, string apiID, string apiPassword, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetEmployeesRaw(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTimeOffRegistrationsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTimeOffRegistrationsRaw(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTimeOffRegistrationsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTimeOffRegistrationsRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomersShortList(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersShortListAsync(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomersRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusChangesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerStatusChangesRaw(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusChangesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusChangesRawAsync(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerCommentsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerCommentsRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerCommentsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerCommentsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerStatusShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetContactsShortList(string siteCode, string apiID, string apiPassword, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsShortListAsync(string siteCode, string apiID, string apiPassword, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetContactsRaw(string siteCode, string apiID, string apiPassword, int customerID, int contactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int contactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectsRaw(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsRawAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectsShortList(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsShortListAsync(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectTypesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectTypesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectCategoriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectCategoriesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectCategoriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectCategoriesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoicesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse GetInvoicesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoicesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse> GetInvoicesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest request);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLinesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse GetInvoiceLinesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLinesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse> GetInvoiceLinesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest request);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLineDetailsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse GetInvoiceLineDetailsRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLineDetailsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse> GetInvoiceLineDetailsRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetDepartmentsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetDepartmentsShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetDepartmentsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetDepartmentsShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTasksRaw(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksRawAsync(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTasksShortList(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksShortListAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTaskTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTaskTypesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTaskTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTaskTypesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMilestonesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMilestonesRaw(string siteCode, string apiID, string apiPassword, int milestoneID, int projectID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMilestonesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMilestonesRawAsync(string siteCode, string apiID, string apiPassword, int milestoneID, int projectID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMilestoneTypesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMilestoneTypesRaw(string siteCode, string apiID, string apiPassword, int milestoneTypeID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMilestoneTypesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMilestoneTypesRawAsync(string siteCode, string apiID, string apiPassword, int milestoneTypeID, int status);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMileageRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse GetMileageRaw(TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetMileageRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse> GetMileageRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest request);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetOpportunitiesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse GetOpportunitiesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetOpportunitiesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse> GetOpportunitiesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetOpportunityTypesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetOpportunityTypesRaw(string siteCode, string apiID, string apiPassword, int opportunityTypeID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetOpportunityTypesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetOpportunityTypesRawAsync(string siteCode, string apiID, string apiPassword, int opportunityTypeID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetBarriersRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetBarriersRaw(string siteCode, string apiID, string apiPassword, int barrierID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetBarriersRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetBarriersRawAsync(string siteCode, string apiID, string apiPassword, int barrierID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetIndustriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetIndustriesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetIndustriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetIndustriesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportTypesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportTypesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportCaseRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportCaseRaw(string siteCode, string apiID, string apiPassword, int supportCaseID, string supportNo, int employeeID, int customerID, int supportContractID, int supportTypeID, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportCaseRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportCaseRawAsync(string siteCode, string apiID, string apiPassword, int supportCaseID, string supportNo, int employeeID, int customerID, int supportContractID, int supportTypeID, int departmentID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportContractRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportContractRaw(string siteCode, string apiID, string apiPassword, int supportContractID, int employeeID, int customerID, int supportContractTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportContractRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportContractRawAsync(string siteCode, string apiID, string apiPassword, int supportContractID, int employeeID, int customerID, int supportContractTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportJournalRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportJournalRaw(string siteCode, string apiID, string apiPassword, int supportCaseID, int employeeID, int customerID, int supportContractID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportJournalRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportJournalRawAsync(string siteCode, string apiID, string apiPassword, int supportCaseID, int employeeID, int customerID, int supportContractID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCountriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCountriesShortList(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCountriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesShortListAsync(string siteCode, string apiID, string apiPassword);
        
        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetNormHoursRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse GetNormHoursRaw(TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetNormHoursRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse> GetNormHoursRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeeNormHoursRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetEmployeeNormHoursRaw(string siteCode, string apiID, string apiPassword, int employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeeNormHoursRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeeNormHoursRawAsync(string siteCode, string apiID, string apiPassword, int employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ValidateCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateCredentials(string siteCode, string apiID, string apiPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ValidateCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string siteCode, string apiID, string apiPassword);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkUnitsRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetWorkUnitsRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int workUnitID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int employeeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int allocationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int taskID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        public int projectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        public int departmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetWorkUnitsRawRequest() {
        }
        
        public GetWorkUnitsRawRequest(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.workUnitID = workUnitID;
            this.employeeID = employeeID;
            this.allocationID = allocationID;
            this.taskID = taskID;
            this.projectID = projectID;
            this.departmentID = departmentID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkUnitsRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetWorkUnitsRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetWorkUnitsRawResult;
        
        public GetWorkUnitsRawResponse() {
        }
        
        public GetWorkUnitsRawResponse(System.Xml.XmlNode GetWorkUnitsRawResult) {
            this.GetWorkUnitsRawResult = GetWorkUnitsRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoicesRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoicesRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetInvoicesRawRequest() {
        }
        
        public GetInvoicesRawRequest(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceID = invoiceID;
            this.customerID = customerID;
            this.status = status;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoicesRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoicesRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoicesRawResult;
        
        public GetInvoicesRawResponse() {
        }
        
        public GetInvoicesRawResponse(System.Xml.XmlNode GetInvoicesRawResult) {
            this.GetInvoicesRawResult = GetInvoicesRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLinesRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLinesRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceLineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int projectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int invoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetInvoiceLinesRawRequest() {
        }
        
        public GetInvoiceLinesRawRequest(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceLineID = invoiceLineID;
            this.customerID = customerID;
            this.projectID = projectID;
            this.invoiceID = invoiceID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLinesRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLinesRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoiceLinesRawResult;
        
        public GetInvoiceLinesRawResponse() {
        }
        
        public GetInvoiceLinesRawResponse(System.Xml.XmlNode GetInvoiceLinesRawResult) {
            this.GetInvoiceLinesRawResult = GetInvoiceLinesRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLineDetailsRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLineDetailsRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceLineDetailID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int projectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int invoiceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetInvoiceLineDetailsRawRequest() {
        }
        
        public GetInvoiceLineDetailsRawRequest(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceLineDetailID = invoiceLineDetailID;
            this.customerID = customerID;
            this.projectID = projectID;
            this.invoiceID = invoiceID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLineDetailsRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLineDetailsRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoiceLineDetailsRawResult;
        
        public GetInvoiceLineDetailsRawResponse() {
        }
        
        public GetInvoiceLineDetailsRawResponse(System.Xml.XmlNode GetInvoiceLineDetailsRawResult) {
            this.GetInvoiceLineDetailsRawResult = GetInvoiceLineDetailsRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMileageRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetMileageRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int customerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int projectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int employeeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int departmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> selfPayment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=10)]
        public int travelCarID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=11)]
        public int transportRateID;
        
        public GetMileageRawRequest() {
        }
        
        public GetMileageRawRequest(string siteCode, string apiID, string apiPassword, int customerID, int projectID, int employeeID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> selfPayment, int travelCarID, int transportRateID) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.customerID = customerID;
            this.projectID = projectID;
            this.employeeID = employeeID;
            this.departmentID = departmentID;
            this.startDate = startDate;
            this.endDate = endDate;
            this.selfPayment = selfPayment;
            this.travelCarID = travelCarID;
            this.transportRateID = transportRateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMileageRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetMileageRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetMileageRawResult;
        
        public GetMileageRawResponse() {
        }
        
        public GetMileageRawResponse(System.Xml.XmlNode GetMileageRawResult) {
            this.GetMileageRawResult = GetMileageRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOpportunitiesRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetOpportunitiesRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int opportunityID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int ownerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int opportunityTypeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        public int barrierID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetOpportunitiesRawRequest() {
        }
        
        public GetOpportunitiesRawRequest(string siteCode, string apiID, string apiPassword, int opportunityID, int customerID, int ownerID, int opportunityTypeID, int barrierID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.opportunityID = opportunityID;
            this.customerID = customerID;
            this.ownerID = ownerID;
            this.opportunityTypeID = opportunityTypeID;
            this.barrierID = barrierID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOpportunitiesRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetOpportunitiesRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetOpportunitiesRawResult;
        
        public GetOpportunitiesRawResponse() {
        }
        
        public GetOpportunitiesRawResponse(System.Xml.XmlNode GetOpportunitiesRawResult) {
            this.GetOpportunitiesRawResult = GetOpportunitiesRawResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNormHoursRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetNormHoursRawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int employeeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        
        public GetNormHoursRawRequest() {
        }
        
        public GetNormHoursRawRequest(string siteCode, string apiID, string apiPassword, int employeeID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.employeeID = employeeID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNormHoursRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetNormHoursRawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetNormHoursRawResult;
        
        public GetNormHoursRawResponse() {
        }
        
        public GetNormHoursRawResponse(System.Xml.XmlNode GetNormHoursRawResult) {
            this.GetNormHoursRawResult = GetNormHoursRawResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap>, TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetWorkUnitsRaw(TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest request) {
            return base.Channel.GetWorkUnitsRaw(request);
        }
        
        public System.Xml.XmlNode GetWorkUnitsRaw(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.workUnitID = workUnitID;
            inValue.employeeID = employeeID;
            inValue.allocationID = allocationID;
            inValue.taskID = taskID;
            inValue.projectID = projectID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetWorkUnitsRaw(inValue);
            return retVal.GetWorkUnitsRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetWorkUnitsRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest request) {
            return base.Channel.GetWorkUnitsRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawResponse> GetWorkUnitsRawAsync(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetWorkUnitsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.workUnitID = workUnitID;
            inValue.employeeID = employeeID;
            inValue.allocationID = allocationID;
            inValue.taskID = taskID;
            inValue.projectID = projectID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetWorkUnitsRawAsync(inValue);
        }
        
        public System.Xml.XmlNode GetAllocationsRaw(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID) {
            return base.Channel.GetAllocationsRaw(siteCode, apiID, apiPassword, allocationID, taskID, employeeID, projectID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetAllocationsRawAsync(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID) {
            return base.Channel.GetAllocationsRawAsync(siteCode, apiID, apiPassword, allocationID, taskID, employeeID, projectID);
        }
        
        public System.Xml.XmlNode GetEmployeesShortList(string siteCode, string apiID, string apiPassword, int departmentID, int status) {
            return base.Channel.GetEmployeesShortList(siteCode, apiID, apiPassword, departmentID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesShortListAsync(string siteCode, string apiID, string apiPassword, int departmentID, int status) {
            return base.Channel.GetEmployeesShortListAsync(siteCode, apiID, apiPassword, departmentID, status);
        }
        
        public System.Xml.XmlNode GetEmployeesRaw(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status) {
            return base.Channel.GetEmployeesRaw(siteCode, apiID, apiPassword, employeeID, initials, departmentID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status) {
            return base.Channel.GetEmployeesRawAsync(siteCode, apiID, apiPassword, employeeID, initials, departmentID, status);
        }
        
        public System.Xml.XmlNode GetTimeOffRegistrationsRaw(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetTimeOffRegistrationsRaw(siteCode, apiID, apiPassword, employeeID, departmentID, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTimeOffRegistrationsRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetTimeOffRegistrationsRawAsync(siteCode, apiID, apiPassword, employeeID, departmentID, fromDate, toDate);
        }
        
        public System.Xml.XmlNode GetCustomersShortList(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID) {
            return base.Channel.GetCustomersShortList(siteCode, apiID, apiPassword, customerStatusID, accountManagerID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersShortListAsync(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID) {
            return base.Channel.GetCustomersShortListAsync(siteCode, apiID, apiPassword, customerStatusID, accountManagerID);
        }
        
        public System.Xml.XmlNode GetCustomersRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID) {
            return base.Channel.GetCustomersRaw(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID) {
            return base.Channel.GetCustomersRawAsync(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID);
        }
        
        public System.Xml.XmlNode GetCustomerStatusChangesRaw(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId) {
            return base.Channel.GetCustomerStatusChangesRaw(siteCode, apiID, apiPassword, fromDate, toDate, employeeId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusChangesRawAsync(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId) {
            return base.Channel.GetCustomerStatusChangesRawAsync(siteCode, apiID, apiPassword, fromDate, toDate, employeeId);
        }
        
        public System.Xml.XmlNode GetCustomerCommentsRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetCustomerCommentsRaw(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerCommentsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetCustomerCommentsRawAsync(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, fromDate, toDate);
        }
        
        public System.Xml.XmlNode GetCustomerStatusShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetCustomerStatusShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetCustomerStatusShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetContactsShortList(string siteCode, string apiID, string apiPassword, int customerID) {
            return base.Channel.GetContactsShortList(siteCode, apiID, apiPassword, customerID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsShortListAsync(string siteCode, string apiID, string apiPassword, int customerID) {
            return base.Channel.GetContactsShortListAsync(siteCode, apiID, apiPassword, customerID);
        }
        
        public System.Xml.XmlNode GetContactsRaw(string siteCode, string apiID, string apiPassword, int customerID, int contactID) {
            return base.Channel.GetContactsRaw(siteCode, apiID, apiPassword, customerID, contactID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int contactID) {
            return base.Channel.GetContactsRawAsync(siteCode, apiID, apiPassword, customerID, contactID);
        }
        
        public System.Xml.XmlNode GetProjectsRaw(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID) {
            return base.Channel.GetProjectsRaw(siteCode, apiID, apiPassword, projectID, status, customerID, projectManagerID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsRawAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID) {
            return base.Channel.GetProjectsRawAsync(siteCode, apiID, apiPassword, projectID, status, customerID, projectManagerID);
        }
        
        public System.Xml.XmlNode GetProjectsShortList(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID) {
            return base.Channel.GetProjectsShortList(siteCode, apiID, apiPassword, status, customerID, projectManagerID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsShortListAsync(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID) {
            return base.Channel.GetProjectsShortListAsync(siteCode, apiID, apiPassword, status, customerID, projectManagerID);
        }
        
        public System.Xml.XmlNode GetProjectTypesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetProjectTypesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectTypesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetProjectTypesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetProjectCategoriesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetProjectCategoriesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectCategoriesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetProjectCategoriesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoicesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest request) {
            return base.Channel.GetInvoicesRaw(request);
        }
        
        public System.Xml.XmlNode GetInvoicesRaw(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceID = invoiceID;
            inValue.customerID = customerID;
            inValue.status = status;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoicesRaw(inValue);
            return retVal.GetInvoicesRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoicesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest request) {
            return base.Channel.GetInvoicesRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawResponse> GetInvoicesRawAsync(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoicesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceID = invoiceID;
            inValue.customerID = customerID;
            inValue.status = status;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoicesRawAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoiceLinesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest request) {
            return base.Channel.GetInvoiceLinesRaw(request);
        }
        
        public System.Xml.XmlNode GetInvoiceLinesRaw(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineID = invoiceLineID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoiceLinesRaw(inValue);
            return retVal.GetInvoiceLinesRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoiceLinesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest request) {
            return base.Channel.GetInvoiceLinesRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawResponse> GetInvoiceLinesRawAsync(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLinesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineID = invoiceLineID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoiceLinesRawAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoiceLineDetailsRaw(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest request) {
            return base.Channel.GetInvoiceLineDetailsRaw(request);
        }
        
        public System.Xml.XmlNode GetInvoiceLineDetailsRaw(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineDetailID = invoiceLineDetailID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoiceLineDetailsRaw(inValue);
            return retVal.GetInvoiceLineDetailsRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetInvoiceLineDetailsRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest request) {
            return base.Channel.GetInvoiceLineDetailsRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawResponse> GetInvoiceLineDetailsRawAsync(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetInvoiceLineDetailsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineDetailID = invoiceLineDetailID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetInvoiceLineDetailsRawAsync(inValue);
        }
        
        public System.Xml.XmlNode GetDepartmentsShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetDepartmentsShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetDepartmentsShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetDepartmentsShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetTasksRaw(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID) {
            return base.Channel.GetTasksRaw(siteCode, apiID, apiPassword, taskID, projectID, status, taskTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksRawAsync(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID) {
            return base.Channel.GetTasksRawAsync(siteCode, apiID, apiPassword, taskID, projectID, status, taskTypeID);
        }
        
        public System.Xml.XmlNode GetTasksShortList(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID) {
            return base.Channel.GetTasksShortList(siteCode, apiID, apiPassword, projectID, status, taskTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksShortListAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID) {
            return base.Channel.GetTasksShortListAsync(siteCode, apiID, apiPassword, projectID, status, taskTypeID);
        }
        
        public System.Xml.XmlNode GetTaskTypesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetTaskTypesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTaskTypesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetTaskTypesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetMilestonesRaw(string siteCode, string apiID, string apiPassword, int milestoneID, int projectID, int status) {
            return base.Channel.GetMilestonesRaw(siteCode, apiID, apiPassword, milestoneID, projectID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMilestonesRawAsync(string siteCode, string apiID, string apiPassword, int milestoneID, int projectID, int status) {
            return base.Channel.GetMilestonesRawAsync(siteCode, apiID, apiPassword, milestoneID, projectID, status);
        }
        
        public System.Xml.XmlNode GetMilestoneTypesRaw(string siteCode, string apiID, string apiPassword, int milestoneTypeID, int status) {
            return base.Channel.GetMilestoneTypesRaw(siteCode, apiID, apiPassword, milestoneTypeID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMilestoneTypesRawAsync(string siteCode, string apiID, string apiPassword, int milestoneTypeID, int status) {
            return base.Channel.GetMilestoneTypesRawAsync(siteCode, apiID, apiPassword, milestoneTypeID, status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetMileageRaw(TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest request) {
            return base.Channel.GetMileageRaw(request);
        }
        
        public System.Xml.XmlNode GetMileageRaw(string siteCode, string apiID, string apiPassword, int customerID, int projectID, int employeeID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> selfPayment, int travelCarID, int transportRateID) {
            TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.employeeID = employeeID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.selfPayment = selfPayment;
            inValue.travelCarID = travelCarID;
            inValue.transportRateID = transportRateID;
            TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetMileageRaw(inValue);
            return retVal.GetMileageRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetMileageRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest request) {
            return base.Channel.GetMileageRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawResponse> GetMileageRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int projectID, int employeeID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> selfPayment, int travelCarID, int transportRateID) {
            TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetMileageRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.employeeID = employeeID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.selfPayment = selfPayment;
            inValue.travelCarID = travelCarID;
            inValue.transportRateID = transportRateID;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetMileageRawAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetOpportunitiesRaw(TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest request) {
            return base.Channel.GetOpportunitiesRaw(request);
        }
        
        public System.Xml.XmlNode GetOpportunitiesRaw(string siteCode, string apiID, string apiPassword, int opportunityID, int customerID, int ownerID, int opportunityTypeID, int barrierID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.opportunityID = opportunityID;
            inValue.customerID = customerID;
            inValue.ownerID = ownerID;
            inValue.opportunityTypeID = opportunityTypeID;
            inValue.barrierID = barrierID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetOpportunitiesRaw(inValue);
            return retVal.GetOpportunitiesRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetOpportunitiesRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest request) {
            return base.Channel.GetOpportunitiesRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawResponse> GetOpportunitiesRawAsync(string siteCode, string apiID, string apiPassword, int opportunityID, int customerID, int ownerID, int opportunityTypeID, int barrierID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetOpportunitiesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.opportunityID = opportunityID;
            inValue.customerID = customerID;
            inValue.ownerID = ownerID;
            inValue.opportunityTypeID = opportunityTypeID;
            inValue.barrierID = barrierID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetOpportunitiesRawAsync(inValue);
        }
        
        public System.Xml.XmlNode GetOpportunityTypesRaw(string siteCode, string apiID, string apiPassword, int opportunityTypeID, int status) {
            return base.Channel.GetOpportunityTypesRaw(siteCode, apiID, apiPassword, opportunityTypeID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetOpportunityTypesRawAsync(string siteCode, string apiID, string apiPassword, int opportunityTypeID, int status) {
            return base.Channel.GetOpportunityTypesRawAsync(siteCode, apiID, apiPassword, opportunityTypeID, status);
        }
        
        public System.Xml.XmlNode GetBarriersRaw(string siteCode, string apiID, string apiPassword, int barrierID, int status) {
            return base.Channel.GetBarriersRaw(siteCode, apiID, apiPassword, barrierID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetBarriersRawAsync(string siteCode, string apiID, string apiPassword, int barrierID, int status) {
            return base.Channel.GetBarriersRawAsync(siteCode, apiID, apiPassword, barrierID, status);
        }
        
        public System.Xml.XmlNode GetIndustriesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetIndustriesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetIndustriesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetIndustriesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetSupportTypesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetSupportTypesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportTypesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetSupportTypesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        public System.Xml.XmlNode GetSupportCaseRaw(string siteCode, string apiID, string apiPassword, int supportCaseID, string supportNo, int employeeID, int customerID, int supportContractID, int supportTypeID, int departmentID, int status) {
            return base.Channel.GetSupportCaseRaw(siteCode, apiID, apiPassword, supportCaseID, supportNo, employeeID, customerID, supportContractID, supportTypeID, departmentID, status);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportCaseRawAsync(string siteCode, string apiID, string apiPassword, int supportCaseID, string supportNo, int employeeID, int customerID, int supportContractID, int supportTypeID, int departmentID, int status) {
            return base.Channel.GetSupportCaseRawAsync(siteCode, apiID, apiPassword, supportCaseID, supportNo, employeeID, customerID, supportContractID, supportTypeID, departmentID, status);
        }
        
        public System.Xml.XmlNode GetSupportContractRaw(string siteCode, string apiID, string apiPassword, int supportContractID, int employeeID, int customerID, int supportContractTypeID) {
            return base.Channel.GetSupportContractRaw(siteCode, apiID, apiPassword, supportContractID, employeeID, customerID, supportContractTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportContractRawAsync(string siteCode, string apiID, string apiPassword, int supportContractID, int employeeID, int customerID, int supportContractTypeID) {
            return base.Channel.GetSupportContractRawAsync(siteCode, apiID, apiPassword, supportContractID, employeeID, customerID, supportContractTypeID);
        }
        
        public System.Xml.XmlNode GetSupportJournalRaw(string siteCode, string apiID, string apiPassword, int supportCaseID, int employeeID, int customerID, int supportContractID) {
            return base.Channel.GetSupportJournalRaw(siteCode, apiID, apiPassword, supportCaseID, employeeID, customerID, supportContractID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportJournalRawAsync(string siteCode, string apiID, string apiPassword, int supportCaseID, int employeeID, int customerID, int supportContractID) {
            return base.Channel.GetSupportJournalRawAsync(siteCode, apiID, apiPassword, supportCaseID, employeeID, customerID, supportContractID);
        }
        
        public System.Xml.XmlNode GetCountriesShortList(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetCountriesShortList(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesShortListAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.GetCountriesShortListAsync(siteCode, apiID, apiPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetNormHoursRaw(TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest request) {
            return base.Channel.GetNormHoursRaw(request);
        }
        
        public System.Xml.XmlNode GetNormHoursRaw(string siteCode, string apiID, string apiPassword, int employeeID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.employeeID = employeeID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse retVal = ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetNormHoursRaw(inValue);
            return retVal.GetNormHoursRawResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse> TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap.GetNormHoursRawAsync(TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest request) {
            return base.Channel.GetNormHoursRawAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawResponse> GetNormHoursRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest inValue = new TimeLog.ReportingApi.SDK.ReportingService.GetNormHoursRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.employeeID = employeeID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimeLog.ReportingApi.SDK.ReportingService.ServiceSoap)(this)).GetNormHoursRawAsync(inValue);
        }
        
        public System.Xml.XmlNode GetEmployeeNormHoursRaw(string siteCode, string apiID, string apiPassword, int employeeID) {
            return base.Channel.GetEmployeeNormHoursRaw(siteCode, apiID, apiPassword, employeeID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeeNormHoursRawAsync(string siteCode, string apiID, string apiPassword, int employeeID) {
            return base.Channel.GetEmployeeNormHoursRawAsync(siteCode, apiID, apiPassword, employeeID);
        }
        
        public bool ValidateCredentials(string siteCode, string apiID, string apiPassword) {
            return base.Channel.ValidateCredentials(siteCode, apiID, apiPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string siteCode, string apiID, string apiPassword) {
            return base.Channel.ValidateCredentialsAsync(siteCode, apiID, apiPassword);
        }
    }
}
